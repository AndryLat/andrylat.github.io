<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Andrylat: Dev notes</title><link>https://andrylat.dev/</link><description>Recent content in Home on Andrylat: Dev notes</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2020-2021, Andrii Latyshev; all rights reserved.</copyright><lastBuildDate>Mon, 15 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://andrylat.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Send me a message</title><link>https://andrylat.dev/contact/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://andrylat.dev/contact/</guid><description> Your name Your email* Your phone number Message
Send message #contact-form { margin-top: 1rem; } #contact-form input, #contact-form textarea { width: 30rem; max-width: 100%; }</description></item><item><title>Build a Pushup counter app with OpenCV and Deep learning</title><link>https://andrylat.dev/posts/2021-02-15-build-a-pushup-counter/</link><pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate><guid>https://andrylat.dev/posts/2021-02-15-build-a-pushup-counter/</guid><description>Since 2019, the raging COVID-19 epidemic has claimed the lives of many people and forced many countries to take measures to blockade and isolate. Exercising at home is becoming a new way to improve people's health and protect them from the Corona virus. Many people responded to the 30-day push-ups challenge with the hashtag #pushupchallenge on social networks as a way to encourage each other to take some physical activities. My team has designed and built a desktop app that can analyze and count the number of pushups.</description></item><item><title>[MOOC] Apollo Lessons on Self-Driving Cars</title><link>https://andrylat.dev/posts/apollo-sdc-lessons-intro/</link><pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate><guid>https://andrylat.dev/posts/apollo-sdc-lessons-intro/</guid><description>This is an introduction course to self-driving cars and Apollo platform - The Android of Self-Driving Car. Through this course, you will be able to identify key parts of self-driving cars and get to know Apollo architecture. You will be able to utilize Apollo HD Map, localization, perception, prediction, planning and control, and start the learning path of building a self-driving car.
My notes for this course:
Lecture 1: SCD Fundamentals Lecture 2: HD Maps Lecture 3: Localization Lecture 4: Perception Lecture 5: Prediction Lecture 6: Planning Lecture 7: Control</description></item><item><title>[MOOC] Apollo Lesson 3: Localization</title><link>https://andrylat.dev/posts/apollo-sdc-lesson-3-localization/</link><pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate><guid>https://andrylat.dev/posts/apollo-sdc-lesson-3-localization/</guid><description>This is my note for lesson 3 of MOOC course: Self-Driving Fundamentals - Featuring Apollo. Content: How the vehicle localizes itself with a single-digit-centimeter-level accuracy.
Localization methods in Apollo The RTK (Real Time Kinematic) based method which incorporates GPS and IMU (Inertial Measurement Unit) information. The multi-sensor fusion method which incorporates GPS, IMU, and LiDAR information. Inertial navigation Global Navigation Satellite System (GNSS) Global Navigation Satellite System (GNSS) refers to a constellation of satellites providing signals from space that transmit positioning and timing data to GNSS receivers.</description></item><item><title>[MOOC] Apollo Lesson 2: HD Maps</title><link>https://andrylat.dev/posts/apollo-sdc-lesson-2-hd-maps/</link><pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate><guid>https://andrylat.dev/posts/apollo-sdc-lesson-2-hd-maps/</guid><description>This is my note for lesson 2 of MOOC course: Self-Driving Fundamentals - Featuring Apollo. Content: High Definition maps for self driving cars.
HD Maps have a high precision and contain a lot of information than your ordinary map on smartphone, such as lane line markings, 3D representation of the road network, traffic signs... You can what you see and GPS to locate your self in the world and identify other objects.</description></item><item><title>[MOOC] Apollo Lesson 1: SDC Fundamentals</title><link>https://andrylat.dev/posts/apollo-sdc-lesson-1-fundamentals/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://andrylat.dev/posts/apollo-sdc-lesson-1-fundamentals/</guid><description>This is my note for lesson 1 of MOOC course: Self-Driving Fundamentals - Featuring Apollo. Content: Identify the key parts of self-driving cars. The Apollo team and architecture.
Human vs Self-driving Car Human Self-Driving Car High traffic accident rate More reliable driving Learn to drive from scratch Learnable driving system Parking trouble No parking trouble Six levels of self-driving car Level 0: Base level - No autonomous task</description></item><item><title/><link>https://andrylat.dev/formeonly/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://andrylat.dev/formeonly/</guid><description>This page is writing instruction for me only.
Card {{&amp;lt; card title="Bước 0 - Học lập trình cơ bản với Python" icon="python.svg"}} &amp;lt;p style="width: 100%"Lập trình là điều đầu tiên bạn cần học để có thể bắt kịp việc thực hành về sau. Python hiện tại là một ngôn ngữ rất phổ biến trong ngành trí tuệ nhân tạo. Có rất nhiều các khoá học được dạy với Python. Do vậy tôi khuyến khích các bạn bắt đầu với ngôn ngữ này.</description></item><item><title>About me</title><link>https://andrylat.dev/about/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://andrylat.dev/about/</guid><description>#my-photo { width: 16rem; margin:0; padding: 0; margin: 1rem 1rem 0.5rem 0; border-radius: 50%; clear: both; } @media screen and (min-width: 400px) { #my-photo { float: right; } } Hello! I'm John Doe - A Machine Learning &amp;amp; Robotics Engineer.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Erat velit scelerisque in dictum. Ut ornare lectus sit amet.</description></item><item><title>Advanced driver-assistance system on Jetson Nano Part 3 - Deep neural networks</title><link>https://andrylat.dev/posts/adas-jetson-nano-deep-neural-networks/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://andrylat.dev/posts/adas-jetson-nano-deep-neural-networks/</guid><description>Recently, I have built a prototype of an advanced driver-assistance system (ADAS) using a Jetson Nano computer. In this project, I have successfully deployed 3 deep neural networks and some computer vision algorithms on a super cheap hardware of Jetson Nano. In the last two posts, I have introduced the system in hardware and software design. In this week, I write about two machine learning modules: Object Detection Module and Lane Detection Module.</description></item><item><title>Advanced driver-assistance system on Jetson Nano Part 2 - Software design</title><link>https://andrylat.dev/posts/adas-jetson-nano-software/</link><pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate><guid>https://andrylat.dev/posts/adas-jetson-nano-software/</guid><description>Recently, I have built a prototype of an advanced driver-assistance system (ADAS) using a Jetson Nano computer. In this project, I have successfully deployed 3 deep neural networks and some computer vision algorithms on a super cheap hardware of Jetson Nano. I decided to write this post series to share about how this system was designed and implemented. The first post is an introduction and the hardware design of my system.</description></item><item><title>Advanced driver-assistance system on Jetson Nano Part 1 - Intro &amp; Hardware design</title><link>https://andrylat.dev/posts/adas-jetson-nano-intro-and-hardware/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><guid>https://andrylat.dev/posts/adas-jetson-nano-intro-and-hardware/</guid><description>Recently, I have built a prototype of an advanced driver-assistance system (ADAS) using a Jetson Nano computer. In this project, I have successfully deployed 3 deep neural networks and some computer vision algorithms on a super cheap hardware of Jetson Nano. I decided to write this post series to share about how this system was designed and implemented. In this series, I will introduce the overall design of the system, 3 deep neural networks I used for environment analysis and some tutorials on TensorRT - the core technology to optimize neural networks for NVIDIA's system.</description></item><item><title/><link>https://andrylat.dev/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://andrylat.dev/archives/</guid><description/></item><item><title>Local Search Engine</title><link>https://andrylat.dev/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://andrylat.dev/search/</guid><description/></item></channel></rss>